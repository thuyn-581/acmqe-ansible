---
  - name: Generate RHSM refresh token
    shell: >
      curl https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token 
      -d grant_type=refresh_token 
      -d client_id=rhsm-api 
      -d refresh_token={{ rhsm_token }} | yq .access_token
    become: true 
    register: refresh_token
    until: refresh_token.stdout != "null"
    retries: 10
    delay: 10      

  - name: Get manifest export jobID url
    shell: >
      curl -kL -H 'Authorization: Bearer {{ refresh_token.stdout }}'
      'https://api.access.redhat.com/management/v1/allocations/{{ sub_alloc_uuid }}/export' | yq .body.href
    become: true 
    register: exportJobID_url
    until: exportJobID_url.stdout != "null"
    retries: 10
    delay: 10

  - name: Print manifest export jobID url
    debug:
      msg: "{{ exportJobID_url.stdout }}"

  - name: Get manifest download link 
    shell: >
      curl -kL -H 'Authorization: Bearer {{ refresh_token.stdout }}'
      {{ exportJobID_url.stdout }} | yq .body.href
    become: true 
    register: download_url       
    until: download_url.stdout != "null"
    retries: 10
    delay: 10     

  - name: Print manifest download url
    debug:
      msg: "{{ download_url.stdout }}"      

  - name: Download manifest file
    ansible.builtin.get_url:
      url: "{{ download_url.stdout }}"
      dest: "./manifest.zip"
      headers: 
        Authorization: "Bearer {{ refresh_token.stdout }}"
      validate_certs: false     

  - name: Set AAP license using manifest file
    awx.awx.license:
      manifest: "./manifest.zip"
      controller_username: "admin"
      controller_password: "{{ aap_pwd.stdout }}"
      controller_host: "https://{{ aap_url.stdout }}"        
      validate_certs: false
      force: true    
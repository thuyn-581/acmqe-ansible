---
- name: Install cli tools
  include_role:
    name: common
    tasks_from: install-tools

- name: Debug
  shell: |
    export PATH=$PWD:$PATH
    echo $PATH
    
- name: Login openshift at {{ spoke_api_url }}
  shell: |
    {{ oc_cmd }} login -u {{ spoke_user }} -p {{ spoke_pwd }} {{ spoke_api_url }}
  changed_when: true       

- name: Preparations
  block:
  - name: Set timestamp for removing certs
    shell: |
      date +"%Y-%m-%dT%H:%M:%S%:z"
    register: start_time
   
  - name: Print timestamp
    debug:
      msg: "{{ start_time.stdout }}" 
  
  - name: Confirm that your cluster is in a stable state
    shell: |
      {{ oc_cmd }} adm wait-for-stable-cluster --minimum-stable-period=5s
  
  - name: Generate new client certificates      
    block: 
    - name: STEP 3 - Generate new client certificates into namespace/openshift-config-managed
      shell: >
        {{ oc_cmd }} adm ocp-certificates regenerate-leaf -n openshift-config-managed secrets 
        kube-controller-manager-client-cert-key 
        kube-scheduler-client-cert-key

    - name: STEP 4 - Generate new certificates into namespace/kube-apiserver-operator
      shell: >
        {{ oc_cmd }} adm ocp-certificates regenerate-leaf -n openshift-kube-apiserver-operator secrets 
        node-system-admin-client

    - name: STEP 5 - Generate new certificates into namespace/kube-apiserver
      shell: >      
        {{ oc_cmd }} adm ocp-certificates regenerate-leaf -n openshift-kube-apiserver secrets 
        check-endpoints-client-cert-key 
        control-plane-node-admin-client-cert-key  
        external-loadbalancer-serving-certkey 
        internal-loadbalancer-serving-certkey 
        kubelet-client localhost-recovery-serving-certkey 
        localhost-serving-cert-certkey 
        service-network-serving-certkey

    - name: STEP 6 -  Wait for cluster operators to stabilize after the change
      shell: |
        {{ oc_cmd }} adm wait-for-stable-cluster

  - name: Generate new signers      
    block:         
    - name: STEP 7 - Generate new root signers
      shell: >     
        {{ oc_cmd }} adm ocp-certificates regenerate-top-level -n openshift-kube-apiserver-operator secrets 
        kube-apiserver-to-kubelet-signer 
        kube-control-plane-signer 
        loadbalancer-serving-signer  
        localhost-serving-signer 
        service-network-serving-signer 

    - name: STEP 8 - kube-controller-manager to create a new bound service account signing key
      shell: |   
        {{ oc_cmd }} -n openshift-kube-controller-manager-operator delete secrets/next-service-account-private-key
        
    - name: STEP 9 - kube-apiserver to create a new bound service account signing key
      shell: |   
        {{ oc_cmd }} -n openshift-kube-apiserver-operator delete secrets/next-bound-service-account-signing-key
          
    - name: STEP 10 - Wait for cluster operators to stabilize after the change
      shell: |   
        {{ oc_cmd }} adm wait-for-stable-cluster
            
  - name: STEP 13 - Generate new client certificates for openshift-config-managed
    shell: >
      {{ oc_cmd }} adm ocp-certificates regenerate-leaf -n openshift-config-managed secrets 
      kube-controller-manager-client-cert-key 
      kube-scheduler-client-cert-key           

  - name: STEP 14 - Update the CA bundle
    shell: |    
      {{ oc_cmd }} config refresh-ca-bundle

  - name: STEP 15 - Create a new kubelet bootstrap.kubeconfig
    shell: |    
      {{ oc_cmd }} config new-kubelet-bootstrap-kubeconfig > bootstrap.kubeconfig
      sleep 5
        
  - name: STEP 16 - Confirm the new bootstrap.kubeconfig
    shell: >    
      {{ oc_cmd }} whoami --kubeconfig=bootstrap.kubeconfig 
      --server=$({{ oc_cmd }} get infrastructure/cluster -ojsonpath='{ .status.apiServerURL }')
          
  - name: STEP 17 - Copy the bootstrap.kubeconfig to every node
    shell: |    
      {{ oc_cmd }} adm copy-to-node nodes --all --copy=bootstrap.kubeconfig=/etc/kubernetes/kubeconfig
            
  - name: STEP 18 - Restart all kubelets and remove their old kubelet.kubeconfig
    shell: |    
      {{ oc_cmd }} adm restart-kubelet nodes --all --directive=RemoveKubeletKubeconfig
  
  - name: STEP 19 - Restart all nodes
    shell: |             
      {{ oc_cmd }} adm reboot-machine-config-pool mcp/worker mcp/master       

  - name: STEP 20 - Wait for the nodes to restart
    shell: |   
      {{ oc_cmd }} adm wait-for-node-reboot nodes --all
    
  - name: STEP 21 - Generate new client certificates for the kube-apiserver-operator
    shell: |   
      {{ oc_cmd }} adm ocp-certificates regenerate-leaf -n openshift-kube-apiserver-operator secrets node-system-admin-client
    
  - name: STEP 22 - Generate new client certificates for the kube-apiserver
    shell: >   
      {{ oc_cmd }} adm ocp-certificates regenerate-leaf -n openshift-kube-apiserver secrets 
      check-endpoints-client-cert-key 
      control-plane-node-admin-client-cert-key 
      external-loadbalancer-serving-certkey 
      internal-loadbalancer-serving-certkey 
      kubelet-client 
      localhost-recovery-serving-certkey 
      localhost-serving-cert-certkey 
      service-network-serving-certkey
    
  - name: STEP 23 - Wait for cluster operators to stabilize after the change
    shell: |   
      {{ oc_cmd }} adm wait-for-stable-cluster
    
  - name: STEP 25 - Create new system:masters/admin.kubeconfig
    shell: |   
      {{ oc_cmd }} config new-admin-kubeconfig > admin.kubeconfig
      sleep 5
    
  - name: STEP 26 - Confirm your new admin.kubeconfig works
    shell: |         
      {{ oc_cmd }} --kubeconfig=admin.kubeconfig whoami        

  - name: STEP 27 - Revoke trust for old signers replaced above
    shell: >  
      {{ oc_cmd }} adm ocp-certificates remove-old-trust -n openshift-kube-apiserver-operator configmaps 
      kube-apiserver-to-kubelet-client-ca 
      kube-control-plane-signer-ca 
      loadbalancer-serving-ca 
      localhost-serving-ca 
      service-network-serving-ca 
      --created-before={{ start_time.stdout }}
      
  - name: STEP 28 - Wait for the cluster operators to stabilize after the change
    shell: |    
      {{ oc_cmd }} adm wait-for-stable-cluster    

  - name: STEP 29 - Restart all nodes
    shell: |      
      {{ oc_cmd }} adm reboot-machine-config-pool mcp/worker mcp/master

  - name: STEP 30 - Wait for the nodes to restart
    shell: |    
      {{ oc_cmd }} adm wait-for-node-reboot nodes --all